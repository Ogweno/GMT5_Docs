GMT的设计思想
=============

:Create Date: 2014-10-10
:Last Updated: 2015-04-17

GMT命令
-------

安装好GMT后，在GMT的bin目录下有一个可执行文件\ ``gmt``\ ，这是GMT中唯一的一个二进制文件，也就是GMT中的唯一一个命令。

GMT的所有操作都通过调用\ ``gmt``\ 的相应模块来完成，这样做的好处在于避免了与其他软件之间的命名冲突。\ ``gmt``\ 的模块大致可以分为如下几类：

- 参数设定类：如\ :doc:`gmtset`
- 绘图操作类：如\ :doc:`psxy`\ 、\ :doc:`grdimage`
- 数据处理类：如\ :doc:`gmtmath`\ 、\ :doc:`grdmath`
- 格式转换类：如\ :doc:`xyz2grd`\ 、\ :doc:`ps2raster`

GMT命令格式
-----------

一般而言，一个GMT命令由“gmt+模块+选项+参数构成”，格式如下::

    gmt module -Axx+bxxxx ...

其中，

- ``gmt``\ 是GMT命令名；
- ``module``\ 是用于完成某个特定操作的模块名，比如用于绘制海岸线的\ ``pscoast``\ ；
- ``-A``\ 为该模块的选项，\ ``xx``\ 则为\ ``-A``\ 选项的参数；
- ``+b``\ 为\ ``-A``\ 选项的子选项，\ ``xxxx``\ 则为该子选项的参数；

需要注意如下几点：

- 每个选项均以\ ``-``\ 开头，后接一个字符表示某个选项，该字符后接选项的参数以及子选项；
- 子选项均以\ ``+``\ 开头，后接一个字符；
- 选项与选项之间以空格分隔；
- 选项内部不能有空格，对于字符串，应用单引号或双引号括起来；

例如::

    gmt pscoast -R0/20/0/20 -Ggray -JM6i -Wthin -B5 -V -P > map.ps

若模块名以\ ``gmt``\ 开头，则模块名中的\ ``gmt``\ 可省略，比如::

    gmt gmtconvert xxx xxx

可以简写为::

    gmt convert xxx xxx

重定向符号
----------

从上面的例子可以看到，GMT命令只是输出了一大堆代码，并没有生成PS文件，因而需要将GMT命令输出的PS代码重定向到PS文件中才可以。

重定向符号有两个：

- ``>``\ ：表示将代码重定向到一个新文件中；若该文件已存在，则覆盖文件中原内容；若该文件不存在，则创建该文件；
- ``>>``\ ：若文件已存在，则将代码追加到已有文件的后面；若文件不存在，则创建该文件，

输入与输出
----------

GMT拥有众多模块，每个模块都或多或少需要一些输入，产生一些输出。GMT中的输入和输出可以分为四类，大多数模块都会产生一种或多种输出：

- 1D ASCII Tables

  也称为表数据或列数据。即数据中每行代表一个记录，每个记录有相同的列数，每一列数据有相同的含义。

- 2D二进制网格文件

  GMT默认的网格文件格式为netCDF格式，当然也支持自定义数据格式。

- PostScript

  GMT中的绘图模块会生成PostScript代码，将这些PS代码重定向到PS文件中，即可用PS查看器查看绘图效果。由于PS文件实际上是纯文本，因而用户可以手动编辑PS文件以实现部分程序中无法实现的效果。

- 报告信息

  包括程序的用法信息、错误消息、警告信息，以及正常的输出信息。其中用法信息、错误消息和警告信息都会被送到标准错误流中。
